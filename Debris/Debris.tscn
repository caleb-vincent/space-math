[gd_scene load_steps=5 format=2]

[ext_resource path="res://assets/turret.svg" type="Texture" id=1]

[sub_resource type="GDScript" id=2]
script/source = "extends SubGame


const DebrisPiece = preload(\"DebrisPiece.tscn\")

const fireSpeed = 1000

var _payload : DebrisPiece = null
var _options : Array = [INF]

################################################################################
#	Inherited Methods
################################################################################


func _process(_delta) -> void:
	if Input.is_action_just_released(\"ui_accept\") || Input.is_action_just_released(\"game_click\"):
		_fire()
	if $FireTimer.wait_time - $FireTimer.time_left > 0.25:
		# TODO: This math is wrong.
		var target = get_viewport().get_mouse_position() - $FirePosition.position
		var angle = $FirePosition.position.angle_to_point(target)
		$SpaceStation/Sprite.rotation = angle * PI


func _ready() -> void:
	_rng.randomize()
	_addDebris()
	$FireTimer.start()



################################################################################
#	Private Methods
################################################################################


func _addDebris() -> void:

	var debris = DebrisPiece.instance()
	add_child(debris)
	debris.position = $DebrisStart.position
	debris.value = _rng.randi_range(-10, 10)

	debris.connect(\"offScreen\", self, \"_debrisLeft\")
	debris.connect(\"impact\", self, \"_onImpact\")
	debris.connect(\"updated\", self, \"_debrisUpdated\")

	var symbol = DebrisPiece.instance()
	add_child(symbol)
	symbol.symbol = \"!=\"
	symbol.position = debris.position + Vector2(48, 0)
	debris.connectTo(symbol)

	var piece2 = DebrisPiece.instance()
	add_child(piece2)
	piece2.position = symbol.position + Vector2(48, 0)
	piece2.value = _rng.randi_range(-10, 10)
	while piece2.value == debris.value:
		piece2.value = _rng.randi_range(-10, 10)
	symbol.connectTo(piece2)
	pass


func _fire() -> void:
	if $FireTimer.time_left <= 0 && _payload != null:
		var target = get_viewport().get_mouse_position() - $FirePosition.position
		_payload.linear_velocity = target.normalized() *  fireSpeed
		$FireTimer.start()
		_payload = null


func _reload() -> void:
	_payload = DebrisPiece.instance()
	var option = _options[_rng.randi_range(0, _options.size() - 1)]
	if option == INF:
		_payload.value = _rng.randi_range(-10, 10)
		while _payload.value == 0:
			_payload.value = _rng.randi_range(-10, 10)
	else:
		_payload.value = option
	_payload.collision_layer = 0x8
	add_child(_payload)
	_payload.position = $FirePosition.position


################################################################################
#	Signal Handling
################################################################################


func _debrisLeft(node : PhysicsBody2D) -> void:
	node.teleportChain(Vector2($DebrisStart.position.x, node.position.y))


func _debrisUpdated(difference : int, oldDifference : int) -> void:
	if oldDifference != INF:
		_options.remove(_options.find(oldDifference))
	if abs(difference) < 10:
		_options.append(difference)


func _onImpact( node : PhysicsBody2D ) -> void:
	node.clearChain()


func _on_SpawnTimer_timeout() -> void:
	_addDebris()


func _on_FireTimer_timeout() -> void:
	_reload()
"

[sub_resource type="ConvexPolygonShape2D" id=4]
points = PoolVector2Array( -640, 0, 640, 0, 0, -32 )

[sub_resource type="CircleShape2D" id=3]
radius = 68.0755

[node name="Debris" type="Node"]
script = SubResource( 2 )

[node name="DebrisStart" type="Position2D" parent="."]
position = Vector2( 1430.04, 96.0667 )
__meta__ = {
"_edit_lock_": true
}

[node name="FireTimer" type="Timer" parent="."]
one_shot = true

[node name="SpawnTimer" type="Timer" parent="."]
wait_time = 20.0
autostart = true

[node name="FirePosition" type="Position2D" parent="."]
position = Vector2( 640, 690 )
__meta__ = {
"_edit_lock_": true
}

[node name="SpaceStation" type="StaticBody2D" parent="."]
position = Vector2( 640, 720 )
collision_layer = 2
collision_mask = 4

[node name="StationShape" type="CollisionShape2D" parent="SpaceStation"]
shape = SubResource( 4 )

[node name="TurretShape" type="CollisionShape2D" parent="SpaceStation"]
position = Vector2( 0, -30 )
shape = SubResource( 3 )

[node name="Sprite" type="Sprite" parent="SpaceStation"]
position = Vector2( 0, -30 )
scale = Vector2( 0.75, 0.75 )
texture = ExtResource( 1 )
[connection signal="timeout" from="FireTimer" to="." method="_on_FireTimer_timeout"]
[connection signal="timeout" from="SpawnTimer" to="." method="_on_SpawnTimer_timeout"]
