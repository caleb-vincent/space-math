[gd_scene load_steps=7 format=2]

[ext_resource path="res://assets/black.png" type="Texture" id=1]
[ext_resource path="res://Cargo/Ship.tscn" type="PackedScene" id=3]
[ext_resource path="res://Cargo/CargoHud.tscn" type="PackedScene" id=5]

[sub_resource type="GDScript" id=1]
script/source = "extends SubGame

const Ship = preload(\"Ship.tscn\")

const INITIAL_VELOCITY = Vector2(-464,0)
const EXIT_NUDGE = Vector2(-500,0)
const GAME_OVER = \"GAME\\r\\nOVER\"
const BONUS_MSG = \"BONUS!\"
const MISSED_MSG = \"MISSED!\"
const OVERLOADED_MSG = \"OVERLOADED!\"

################################################################################
#	Inherited Methods
################################################################################


func _process(delta: float) -> void:
	$Hud.time = $DepartureTimer.time_left


func _ready() -> void:
	_rng.randomize()
	_newShip()
	$Hud.score = 0
	$Hud.controlsDisabled = true


################################################################################
#	Public Methods
################################################################################


################################################################################
#	Private Methods
################################################################################


func _difficultyTimeMultiplier() -> float:
	if Options.selectedDifficulty == Options.Difficulty.EASY:
		return _rng.randf_range(0.75, 1.25)
	elif Options.selectedDifficulty == Options.Difficulty.HARD:
		return _rng.randf_range(0.25, 0.75)
	else:
		return _rng.randf_range(0.5, 1)


func _gameOver() -> void:
	$Hud.msgText = GAME_OVER
	$Hud.connect(\"msgGone\", self, \"_on_GameOver\")


func _newShip() -> void:
	$Hud.shipName = \"M.S.S. \" + Data.ShipNames[_rng.randi_range(0, Data.ShipNames.size() - 1)]
	$Ship.cargoCount = _rng.randi_range(0, $Ship.MAX_CARGO / 2)
	$Ship.applied_force = Vector2(0,0)
	$Ship.position = $ShipStart.position
	$Ship.linear_velocity = INITIAL_VELOCITY
	$Hud.loadCount = 0
	var loadCount = $Ship.MAX_CARGO - $Ship.cargoCount
	$Hud.loadTotal = loadCount
	var hCount = int(loadCount / 100)
	var tCount = int((loadCount - (hCount * 100)) / 10)
	var oCount = loadCount - (hCount * 100) - (tCount * 10)
	$DepartureTimer.wait_time = (hCount + tCount + oCount) * _difficultyTimeMultiplier()
	$DepartureTimer.start()


func _shipDeparture() -> void:
	if $Hud.loadCount < $Hud.loadTotal:
		$Hud.lives -= 1
		$Hud.msgText = MISSED_MSG
	elif $Hud.loadCount == $Hud.loadTotal && $DepartureTimer.time_left > $DepartureTimer.wait_time / 2:
		$Hud.lives += 1
		$Hud.msgText = BONUS_MSG
	if $Hud.lives < 0:
		_gameOver()
	$Ship.add_force(Vector2(0,0), EXIT_NUDGE)
	$Hud.controlsDisabled = true


func _updateLoadCount(add : int) -> void:
	$Hud.loadCount += add
	$Ship.addCargo(add)
	if $Hud.loadCount == $Hud.loadTotal:
		$Hud.score += 1
		_shipDeparture()
		$DepartureTimer.stop()
	elif $Hud.loadCount > $Hud.loadTotal:
		$Hud.msgText = OVERLOADED_MSG
		$Hud.lives = ($Hud.lives - 1 if $Hud.lives > 0 else 0)


################################################################################
#	Signal Handling
################################################################################


func _on_onesPlace() -> void:
	if $Ship.isReady():
		_updateLoadCount(1)


func _on_hundredsPlace() -> void:
	if $Ship.isReady():
		_updateLoadCount(100)


func _on_tensPlace() -> void:
	if $Ship.isReady():
		_updateLoadCount(10)


func _on_DepartureTimer_timeout() -> void:
	_shipDeparture()


func _on_GameOver() -> void:
	emit_signal(\"gameOver\")


func _on_ShipGone() -> void:
	_newShip()


func _on_Ship_shipReady() -> void:
	$Hud.controlsDisabled = false

"

[sub_resource type="RectangleShape2D" id=4]
extents = Vector2( 760, 216 )

[sub_resource type="RectangleShape2D" id=3]
extents = Vector2( 24, 167.442 )

[node name="Cargo" type="Node"]
script = SubResource( 1 )

[node name="DepartureTimer" type="Timer" parent="."]
wait_time = 20.0
one_shot = true

[node name="Background" type="TextureRect" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
size_flags_horizontal = 3
size_flags_vertical = 3
texture = ExtResource( 1 )
expand = true
stretch_mode = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ShipStart" type="Position2D" parent="."]
position = Vector2( 1400, 0 )

[node name="Ship" parent="." instance=ExtResource( 3 )]
position = Vector2( 1399.57, 0 )

[node name="Hud" parent="." instance=ExtResource( 5 )]
lives = 5

[node name="DepartureAccelerator" type="Area2D" parent="."]
space_override = 3
gravity_vec = Vector2( -1, 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="DepartureAccelerator"]
position = Vector2( -872, 304 )
shape = SubResource( 4 )

[node name="StoppingBuffer" type="Area2D" parent="."]
position = Vector2( -136, 160 )
space_override = 3
gravity_vec = Vector2( 0, 0 )
gravity = 0.0
linear_damp = 10.0

[node name="CollisionShape2D" type="CollisionShape2D" parent="StoppingBuffer"]
position = Vector2( 48, 144 )
shape = SubResource( 3 )
[connection signal="timeout" from="DepartureTimer" to="." method="_on_DepartureTimer_timeout"]
[connection signal="shipGone" from="Ship" to="." method="_on_ShipGone"]
[connection signal="shipReady" from="Ship" to="." method="_on_Ship_shipReady"]
[connection signal="gameOver" from="Hud" to="." method="_on_GameOver"]
[connection signal="hundredsPlace" from="Hud" to="." method="_on_hundredsPlace"]
[connection signal="onesPlace" from="Hud" to="." method="_on_onesPlace"]
[connection signal="tensPlace" from="Hud" to="." method="_on_tensPlace"]
